{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
  "parameters": {
    "environmentPrefixOne": {
      "type": "string",
      "defaultValue": "revelar1",
      "metadata": {
        "description": "This is the first  prefix that will be added, before name of every resource. Can be blank."
      }
    },
    "environmentPrefixTwo": {
      "type": "string",
      "defaultValue": "dev1",
      "metadata": {
        "description": "This is the second environment prefix that will be added after environmentPrefixTwo, but before every other name of every resource. Can be blank."
      }
    },
    "cosmosDBnamePrefix": {
      "type": "string",
      "defaultValue": "cosmos-db",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. This field can contain only lowercase letters, numbers and the '-' character. Upper case letters will be converted to lowercase. The total amount of characters including all prefixes must be between 3 and 31 characters."
      }
    },
    "sqlDatabaseNamePrefix": {
      "type": "string",
      "defaultValue": "sql-db",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 128 characters."
      }
    },
    "sqlServerNamePrefix": {
      "type": "string",
      "defaultValue": "sql-server",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 64 characters."
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorPassword": {
      "type": "securestring",
      "defaultValue": "QaSFJQOvT2xr7hcUxdrC"
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "defaultValue": "stor",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. This field can contain only lowercase letters and numbers. Upper case letters will be converted to lowercase, the '-' character will be removed. The total amount of characters including all prefixes must be between 3 and 24 characters."
      }
    },
    "appServicePlanNamePrefix": {
      "type": "string",
      "defaultValue": "appservice",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 40 characters."
      }
    },
    "WebAPInamePrefix": {
      "type": "string",
      "defaultValue": "webAPI",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 60 characters."
      }
    },
    "DeviceAPInamePrefix": {
      "type": "string",
      "defaultValue": "deviceAPI",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 60 characters."
      }
    },
    "PractitionerPortalNamePrefix": {
      "type": "string",
      "defaultValue": "portal-practitioner",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 60 characters."
      }
    },
    "PatientPortalNamePrefix": {
      "type": "string",
      "defaultValue": "portal-patient",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 60 characters."
      }
    },
    "azureSearchNamePrefix": {
      "type": "string",
      "defaultValue": "search",
      "metadata": {
        "description": "This is the third prefix that will be added after environmentPrefixTwo, environmentPrefixTwo. The total amount of characters including all prefixes must not exceed 60 characters."
      }
    },
    "azureSearchSKU": {
      "type": "string",
      "defaultValue": "free",
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3"
      ],
      "metadata": {
        "description": "The SKU of the search service you want to create. E.g. free or standard"
      }
    },
    "appServicePlanSize": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The instance size of the App Service Plan. This is the master resource for Web Apps."
      }
    },
    "appServicePlanTier": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_RAGRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "var_syntaxCompatibilityCosmosDB": "[concat(toLower(parameters('environmentPrefixOne')),'-',toLower(parameters('environmentPrefixTwo')),'-')]",
    "var_syntaxCompatibilityStorageAccount": "[concat(toLower(replace(variables('var_syntaxCompatibilityCosmosDB'),'-','')))]",
    "cosmosDBAccountName": "[concat(variables('var_syntaxCompatibilityCosmosDB'),parameters('cosmosDBnamePrefix'))]",
    "sqlDBname": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('sqlDatabaseNamePrefix'))]",
    "sqlServerName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('sqlServerNamePrefix'))]",
    "storageAccountName": "[concat(variables('var_syntaxCompatibilityStorageAccount'),parameters('storageAccountNamePrefix'))]",
    "appServicePlanName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('appServicePlanNamePrefix'))]",
    "webAppWebAPIName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('WebAPInamePrefix'))]",
    "webAppDeviceAPIName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('DeviceAPInamePrefix'))]",
    "webAppPractitionerPortalName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('PractitionerPortalNamePrefix'))]",
    "webAppPatientPortalName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('PatientPortalNamePrefix'))]",
    "azureSearchName": "[concat(parameters('environmentPrefixOne'),'-',parameters('environmentPrefixTwo'),'-',parameters('azureSearchNamePrefix'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[variables('cosmosDBAccountName')]",
    "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Cosmos DB"
      },
      "properties": {
        "name": "[variables('cosmosDBAccountName')]",
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SQL Server"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('sqlDBname')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "SQL Database"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "Storage Account"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "App Sevice Plan"
      },
      "sku": {
        "name": "[parameters('appServicePlanSize')]",
        "tier": "[parameters('appServicePlanTier')]"
      }
    },
    {
      "type": "Microsoft.Web/Sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppWebAPIName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "tags": {
        "displayName": "Web API"
      },
      "properties": {
        "name": "[variables('webAppWebAPIName')]",
        "serverFarmId": "[variables('appServicePlanName')]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "Name": "DocSdkSettings:DocumentDbPrimaryKey",
              "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDBAccountName')), '2015-04-08').primaryMasterKey]"
            },
            {
              "Name": "DocSdkSettings:DocumentDbEndpoint",
              "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDBAccountName'))).documentEndpoint]"
            },
            {
              "Name": "Data:DefaultConnection:ConnectionString",
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDBname'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorPassword'), ';')]"
            },
            {
              "Name": "DefaultConnection",
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDBname'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorPassword'), ';')]"
            },
            {
              "Name": "StorageConfiguration:StorageConnection",
              "Value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';AccountKey=' , listKeys(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1,';EndpointSuffix=core.windows.net' )]"
            },
            {
              "Name": "DomainAllowedForCors:1",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixOne'),parameters('PractitionerPortalNamePrefix'),'.azurewebsites.net')]"
            },
            {
              "Name": "DomainAllowedForCors:2",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixOne'),parameters('PatientPortalNamePrefix'),'.azurewebsites.net')]"
            },
            {
              "Name": "PractitionerPortalDomain",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixOne'),parameters('PractitionerPortalNamePrefix'),'.azurewebsites.net')]"
            },
            {
              "Name": "PatientPortalDomain",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixOne'),parameters('PatientPortalNamePrefix'),'.azurewebsites.net')]"
            }
          ]
        }
      },
      "resources": [
        
      ]
    },
    {
      "type": "Microsoft.Web/Sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppDeviceAPIName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "tags": {
        "displayName": "Device API"
      },
      "properties": {
        "name": "[variables('webAppDeviceAPIName')]",
        "serverFarmId": "[variables('appServicePlanName')]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "Name": "DocSdkSettings:DocumentDbPrimaryKey",
              "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDBAccountName')), '2015-04-08').primaryMasterKey]"
            },
            {
              "Name": "DocSdkSettings:DocumentDbEndpoint",
              "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDBAccountName'))).documentEndpoint]"
            },
            {
              "Name": "Data:DefaultConnection:ConnectionString",
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDBname'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorPassword'), ';')]"
            },
            {
              "Name": "DefaultConnection",
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDBname'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorPassword'), ';')]"
            },
            {
              "Name": "StorageConfiguration:StorageConnection",
              "Value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';AccountKey=' , listKeys(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1,';EndpointSuffix=core.windows.net' )]"
            },
            {
              "Name": "AppSettings:RevelarDeviceSetupUrl",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixOne'),parameters('PractitionerPortalNamePrefix'),'.azurewebsites.net/registration/pin')]"
            },
            {
              "Name": "DIAGNOSTICS_AZUREBLOBCONTAINERSASURL",
              "Value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';AccountKey=' , listKeys(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1 )]"
            }
          ]
        }
      },
      "resources": [
        
      ]
    },
    {
      "type": "Microsoft.Web/Sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppPractitionerPortalName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "tags": {
        "displayName": "Practitioner Portal"
      },
      "properties": {
        "name": "[variables('webAppPractitionerPortalName')]",
        "serverFarmId": "[variables('appServicePlanName')]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "Name": "ApiClientConfiguration:Domain",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixTwo'),'-',variables('webAppWebAPIName'),'.azurewebsites.net')]"
            },
            {
              "Name": "RequireHttps",
              "Value": "true"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/Sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppPatientPortalName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "tags": {
        "displayName": "Patient Portal"
      },
      "properties": {
        "name": "[variables('webAppPatientPortalName')]",
        "serverFarmId": "[variables('appServicePlanName')]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "Name": "ApiClientConfiguration:Domain",
              "Value": "[concat('https://',parameters('environmentPrefixOne'),parameters('environmentPrefixTwo'),'-',variables('webAppWebAPIName'),'.azurewebsites.net')]"
            },
            {
              "Name": "RequireHttps",
              "Value": "true"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-08-19",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Azure Search"
      },
      "sku": {
        "name": "[toLower(parameters('azureSearchSKU'))]"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    }
  ]
}